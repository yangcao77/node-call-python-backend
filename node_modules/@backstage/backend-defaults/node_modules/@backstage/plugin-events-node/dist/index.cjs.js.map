{"version":3,"file":"index.cjs.js","sources":["../src/api/EventRouter.ts","../src/api/DefaultEventsService.ts","../src/api/SubTopicEventRouter.ts","../src/service.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventParams } from './EventParams';\nimport { EventsService } from './EventsService';\n\n/**\n * Subscribes to a topic and - depending on a set of conditions -\n * republishes the event to another topic.\n *\n * @see {@link https://www.enterpriseintegrationpatterns.com/MessageRouter.html | Message Router pattern}.\n * @public\n */\nexport abstract class EventRouter {\n  private readonly events: EventsService;\n  private readonly topics: string[];\n  private subscribed: boolean = false;\n\n  protected constructor(options: { events: EventsService; topics: string[] }) {\n    this.events = options.events;\n    this.topics = options.topics;\n  }\n\n  protected abstract getSubscriberId(): string;\n\n  protected abstract determineDestinationTopic(\n    params: EventParams,\n  ): string | undefined;\n\n  /**\n   * Subscribes itself to the topic(s),\n   * after which events potentially can be received\n   * and processed by {@link EventRouter.onEvent}.\n   */\n  async subscribe(): Promise<void> {\n    if (this.subscribed) {\n      return;\n    }\n\n    this.subscribed = true;\n\n    await this.events.subscribe({\n      id: this.getSubscriberId(),\n      topics: this.topics,\n      onEvent: this.onEvent.bind(this),\n    });\n  }\n\n  async onEvent(params: EventParams): Promise<void> {\n    const topic = this.determineDestinationTopic(params);\n\n    if (!topic) {\n      return;\n    }\n\n    // republish to different topic\n    await this.events.publish({\n      ...params,\n      topic,\n    });\n  }\n}\n","/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LoggerService } from '@backstage/backend-plugin-api';\nimport { EventParams } from './EventParams';\nimport { EventsService, EventsServiceSubscribeOptions } from './EventsService';\n\n/**\n * In-process event broker which will pass the event to all registered subscribers\n * interested in it.\n * Events will not be persisted in any form.\n * Events will not be passed to subscribers at other instances of the same cluster.\n *\n * @public\n */\n// TODO(pjungermann): add opentelemetry? (see plugins/catalog-backend/src/util/opentelemetry.ts, etc.)\nexport class DefaultEventsService implements EventsService {\n  private readonly subscribers = new Map<\n    string,\n    Omit<EventsServiceSubscribeOptions, 'topics'>[]\n  >();\n\n  private constructor(private readonly logger: LoggerService) {}\n\n  static create(options: { logger: LoggerService }): DefaultEventsService {\n    return new DefaultEventsService(options.logger);\n  }\n\n  /**\n   * Returns a plugin-scoped context of the `EventService`\n   * that ensures to prefix subscriber IDs with the plugin ID.\n   *\n   * @param pluginId - The plugin that the `EventService` should be created for.\n   */\n  forPlugin(pluginId: string): EventsService {\n    return {\n      publish: (params: EventParams): Promise<void> => {\n        return this.publish(params);\n      },\n      subscribe: (options: EventsServiceSubscribeOptions): Promise<void> => {\n        return this.subscribe({\n          ...options,\n          id: `${pluginId}.${options.id}`,\n        });\n      },\n    };\n  }\n\n  async publish(params: EventParams): Promise<void> {\n    this.logger.debug(\n      `Event received: topic=${params.topic}, metadata=${JSON.stringify(\n        params.metadata,\n      )}, payload=${JSON.stringify(params.eventPayload)}`,\n    );\n\n    if (!this.subscribers.has(params.topic)) {\n      return;\n    }\n\n    const onEventPromises: Promise<void>[] = [];\n    this.subscribers.get(params.topic)?.forEach(subscription => {\n      onEventPromises.push(\n        (async () => {\n          try {\n            await subscription.onEvent(params);\n          } catch (error) {\n            this.logger.warn(\n              `Subscriber \"${subscription.id}\" failed to process event for topic \"${params.topic}\"`,\n              error,\n            );\n          }\n        })(),\n      );\n    });\n\n    await Promise.all(onEventPromises);\n  }\n\n  async subscribe(options: EventsServiceSubscribeOptions): Promise<void> {\n    options.topics.forEach(topic => {\n      if (!this.subscribers.has(topic)) {\n        this.subscribers.set(topic, []);\n      }\n\n      this.subscribers.get(topic)!.push({\n        id: options.id,\n        onEvent: options.onEvent,\n      });\n    });\n  }\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventParams } from './EventParams';\nimport { EventRouter } from './EventRouter';\nimport { EventsService } from './EventsService';\n\n/**\n * Subscribes to the provided (generic) topic\n * and publishes the events under the more concrete sub-topic\n * depending on the implemented logic for determining it.\n * Implementing classes might use information from `metadata`\n * and/or properties within the payload.\n *\n * @public\n */\nexport abstract class SubTopicEventRouter extends EventRouter {\n  protected constructor(options: { events: EventsService; topic: string }) {\n    super({\n      events: options.events,\n      topics: [options.topic],\n    });\n  }\n\n  protected abstract determineSubTopic(params: EventParams): string | undefined;\n\n  protected determineDestinationTopic(params: EventParams): string | undefined {\n    const subTopic = this.determineSubTopic(params);\n    return subTopic ? `${params.topic}.${subTopic}` : undefined;\n  }\n}\n","/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  coreServices,\n  createServiceFactory,\n  createServiceRef,\n} from '@backstage/backend-plugin-api';\nimport { EventsService, DefaultEventsService } from './api';\n\n/**\n * The {@link EventsService} that allows to publish events, and subscribe to topics.\n * Uses the `root` scope so that events can be shared across all plugins, modules, and more.\n *\n * @public\n */\nexport const eventsServiceRef = createServiceRef<EventsService>({\n  id: 'events.service',\n  scope: 'plugin',\n});\n\n/** @public */\nexport const eventsServiceFactory = createServiceFactory({\n  service: eventsServiceRef,\n  deps: {\n    pluginMetadata: coreServices.pluginMetadata,\n    rootLogger: coreServices.rootLogger,\n  },\n  async createRootContext({ rootLogger }) {\n    return DefaultEventsService.create({ logger: rootLogger });\n  },\n  async factory({ pluginMetadata }, eventsService) {\n    return eventsService.forPlugin(pluginMetadata.getId());\n  },\n});\n"],"names":["createServiceRef","createServiceFactory","coreServices"],"mappings":"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"}